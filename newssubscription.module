<?php

/**
 * @file Memberform module.
 */

/**
 * Include form page definitions.
 */
module_load_include('inc', 'newssubscription', 'newssubscription_form_helpers');
module_load_include('inc', 'newssubscription', 'newssubscription_processing');
module_load_include('inc', 'newssubscription', 'newssubscription_news_processing');
module_load_include('inc', 'pathauto', 'pathauto');

// Include form definition files in /pages.
module_load_include('inc', 'newssubscription', 'multipage_forms/newssubscription_pages_helpers');
$form_names = newssubscription_get_formnames();
foreach ($form_names as $form_name) {
  module_load_include('inc', 'newssubscription', 'multipage_forms/newssubscription_' . $form_name . '_pages');
}

/**
 * Implements hook_menu().
 */
function newssubscription_menu() {
  $items = array();
  $form_names = newssubscription_get_formnames();
  foreach ($form_names as $form_name) {
    $settings_callback = 'newssubscription_' . $form_name . '_settings';
    $path_name = $settings_callback('path_name');
    $path_arguments = $settings_callback('path_arguments');
    $form_title = $settings_callback('form_title');
    $items[$path_name] = array(
      'title' => $form_title,
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'newssubscription_get_page',
      'page arguments' => array('newssubscription_form', $form_name),
      'file' => 'newssubscription_form.inc',
      'access callback' => TRUE,
    );
    // Add arguments to form callback.
    if (!empty($path_arguments)) {
      foreach ($path_arguments as $key => $path_argument) {
        $items[$path_name]['page arguments'][] = $key + 2;
      }
    }
    // Optionally set user access permissions.
    if (!empty($settings_callback('permissions'))) {
      $items[$path_name]['access callback'] = 'user_access';
      $items[$path_name]['access arguments'] = $settings_callback('permissions');
    }
  }

  $items['admin/config/sp/nieuwsaanmeldingen'] = [
    'title'            => 'Nieuwsaanmeldinstellingen',
    'description'      => 'Instellingen voor nieuwsaanmeldingen',
    'type'             => MENU_NORMAL_ITEM,
    'page callback'    => 'drupal_get_form',
    'page arguments'   => ['newssubscription_settings_form'],
    'access arguments' => array('access administration pages'),
    'file'             => 'newssubscription_settings_form.inc',
  ];

  $items['admin/config/sp/nieuwsaanmeldingen/instellingen'] = [
    'title'            => 'Nieuwsaanmeldinstellingen',
    'description'      => 'Instellingen voor nieuwsaanmeldingen',
    'type'             => MENU_DEFAULT_LOCAL_TASK,
    'access arguments' => array('access administration pages'),
  ];

  $items['admin/config/sp/nieuwsaanmeldingen/test'] = [
    'title'            => 'TEST',
    'type'             => MENU_LOCAL_TASK,
    'page callback'    => 'drupal_get_form',
    'page arguments'   => ['newssubscription_test_form'],
    'access arguments' => array('access administration pages'),
    'file'             => 'newssubscription_test_form.inc',
  ];

  $items['nieuwsaanmelding/fout'] = [
      'title'           => 'Er is een fout opgetreden',
      'type'            => MENU_CALLBACK,
      'page callback'   => 'newssubscription_page_error',
      'access callback' => TRUE,
      'file'            => 'newssubscription_page_actions.inc',
  ];

  $items['nieuwsaanmelding/bevestig/%'] = [
    'title'           => 'Aanmelding bevestigen',
    'type'            => MENU_CALLBACK,
    'page callback'   => 'newssubscription_subscription_validate',
    'page arguments'  => [2],
    'access callback' => TRUE,
    'file'            => 'newssubscription_page_actions.inc',
  ];

  $items['nieuwsaanmelding/afmelden/%'] = [
    'title'           => 'Afmelden SP nieuws',
    'type'            => MENU_CALLBACK,
    'page callback'   => 'newssubscription_unsubscribe',
    'page arguments'  => [2],
    'access callback' => TRUE,
    'file'            => 'newssubscription_news_processing.inc',
  ];

  $items['admin/sp/newssubscription'] = array(
    'title' => 'Nieuwsbrief aanmeldpagina',
    'description' => '',
    'weight' => 0,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('newssubscription_sp_sections_form'),
    'access arguments' => array('edit sp sections'),
  );

  $cron_key = variable_get('cron_key');
  $items['nieuwsaanmelding/cron/' . $cron_key] = array(
    'title' => 'Newssubscription cron',
    'type' => MENU_CALLBACK,
    'page callback' => 'newssubscription_customcron',
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Custom form callback to pass arguments.
 *
 * @param string $form_callback
 *   General form callback for all forms and pages.
 * @param string $form_name
 *   Name of the form to display.
 *
 * @return array
 *   Drupal form render array.
 */
function newssubscription_get_page($form_callback, $form_name, $arg1 = NULL, $arg2 = NULL, $arg3 = NULL, $arg4 = NULL) {
  $variables['form'] = drupal_get_form($form_callback, $form_name, $arg1, $arg2, $arg3, $arg4);

  $fid = variable_get('newssubscription_banner_image');
  $file = file_load($fid);
  if ($file) {
    $variables['image'] = spmedia_header_crop_picture($file);
  }
  $content = theme('newssubscription_theme_page', $variables);
  return $content;
}

/**
 * Implements hook_mail(). Mail content created in newssubscription_processing.inc.
 */
function newssubscription_mail($key, &$message, $params) {
  switch ($key) {
    case "new-content-message":
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['content'];
      break;

    case 'verificatie':
      newssubscription_get_confirmation_mail($message, $params);
      break;

    case 'reminder':
      newssubscription_get_reminder_mail($message, $params);
      break;
    case 'success':
      newssubscription_get_success_mail($message, $params);
      break;
  }
}

/*
 * Implements hook_theme().
 */
function newssubscription_theme($existing, $type, $theme, $path) {
  if ($type == 'module') {
    return array(
      'newssubscription_theme_page' => array(
        'variables' => array(),
        'template' => 'newssubscription-page'
      ),
      'newssubscription_theme_mail_single' => array(
        'variables' => array('title' => NULL, 'image' => NULL, 'themes' => NULL, 'short_text' => NULL, 'sections'=>NULL, 'persons' => NULL, 'links' => NULL),
        'template' => 'newssubscription-mail-single'
      ),
      'newssubscription_theme_mail_digest' => array(
        'variables' => array('items' => NULL,),
        'template' => 'newssubscription-mail-digest'
      ),
    );
  }
  return array(); //will raise fatal error if void
}

function newssubscription_sp_sections_form($form, &$form_state) {
  $form['newssubscription_banner_image'] = array(
    '#title' => 'Banner afbeelding',
    '#description' => 'Banner weergave: 1920 x 480, dus een grote afbeedling.',
    '#type' => 'media',
    '#collapsed' => FALSE,
    '#default_value' => variable_get('newssubscription_banner_image', array('fid' => 0)),
    '#required' => TRUE,
    '#tree' => TRUE,
  );
  return system_settings_form($form);
}

function newssubscription_customcron() {
  if (variable_get('newssubscription_active') == 1) {
    // Send reminders every hour.
    $lastrun = variable_get('newssubscription_cron_lastrun');
    if ($lastrun < (time() - 3600)) {
      newssubscription_submit_pending();
      newssubscription_send_reminders();
      variable_set('newssubscription_cron_lastrun', time());
    }
    // Send news.
    newssubscription_send_news();
  }
}
